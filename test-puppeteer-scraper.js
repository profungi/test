#!/usr/bin/env node

/**
 * ÊµãËØï Puppeteer Áà¨Ëô´ - Âè™ÊµãËØï‰∏Ä‰∏™È°µÈù¢
 */

const EventbriteScraper = require('./src/scrapers/eventbrite-scraper');

async function testSinglePage() {
  console.log('üß™ Testing Puppeteer-based Eventbrite scraper...\n');

  const scraper = new EventbriteScraper();

  try {
    // Ëé∑Âèñ‰∏ãÂë®Êó∂Èó¥ËåÉÂõ¥
    const weekRange = scraper.getNextWeekRange();
    console.log(`üìÖ Target week: ${weekRange.identifier}\n`);

    // ‰ΩøÁî® scraper.scrapeEvents ËÄå‰∏çÊòØÁõ¥Êé•Ë∞ÉÁî® parseEventbritePage
    // ËøôÊ†∑‰ºöËøõÂÖ•ËØ¶ÊÉÖÈ°µËé∑ÂèñÂÆåÊï¥‰ø°ÊÅØ
    console.log('üï∑Ô∏è  Starting to scrape events (will fetch detail pages)...\n');
    const allEvents = await scraper.scrapeEvents(weekRange);

    console.log(`\nüìä Results:`);
    console.log(`   Total events scraped: ${allEvents.length}`);

    // ÊòæÁ§∫Ââç10‰∏™Ê¥ªÂä®ÁöÑËØ¶ÁªÜ‰ø°ÊÅØ
    console.log(`\nüìù Sample events (first 10):\n`);
    allEvents.slice(0, 10).forEach((event, i) => {
      console.log(`Event ${i + 1}:`);
      console.log(`   Title: ${event.title}`);
      console.log(`   Time: ${event.startTime}`);
      console.log(`   Location: ${event.location}`);
      console.log(`   Price: ${event.price || 'N/A'}`);
      console.log(`   URL: ${event.originalUrl.substring(0, 80)}...`);
      console.log('');
    });

    // Ê£ÄÊü•ÈóÆÈ¢ò
    console.log(`\nüîç Quality Check:`);
    const defaultLocations = allEvents.filter(e =>
      e.location === 'San Francisco Bay Area' || e.location === 'San Francisco'
    );
    const missingPrice = allEvents.filter(e => !e.price);
    const checkTicketPrice = allEvents.filter(e =>
      e.price && e.price.includes('Check ticket')
    );
    const hasFullAddress = allEvents.filter(e =>
      e.location && (e.location.match(/\d+\s+[A-Za-z\s]+(Street|St|Avenue|Ave|Boulevard|Blvd|Road|Rd)/i) ||
                     e.location.includes(','))
    );

    console.log(`   Events with default location: ${defaultLocations.length}/${allEvents.length}`);
    console.log(`   Events without price info: ${missingPrice.length}/${allEvents.length}`);
    console.log(`   Events with "Check ticket": ${checkTicketPrice.length}/${allEvents.length}`);
    console.log(`   Events with full address: ${hasFullAddress.length}/${allEvents.length}`);

  } catch (error) {
    console.error('‚ùå Test failed:', error.message);
    console.error(error.stack);
  } finally {
    // Á°Æ‰øùÂÖ≥Èó≠ÊµèËßàÂô®
    await scraper.closeBrowser();
    console.log('\n‚úÖ Test completed');
  }
}

testSinglePage();
