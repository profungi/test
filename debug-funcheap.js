#!/usr/bin/env node

/**
 * Funcheap Ë∞ÉËØïËÑöÊú¨ - Áî®Êù•Ê£ÄÊü•‰∫ã‰ª∂ HTML ÁªìÊûÑ
 */

const puppeteer = require('puppeteer');
const cheerio = require('cheerio');

async function main() {
  let browser;
  try {
    console.log('üîç Funcheap HTML ÁªìÊûÑË∞ÉËØï\n');

    browser = await puppeteer.launch({
      headless: true,
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });

    const page = await browser.newPage();
    const url = 'https://sf.funcheap.com/category/event/event-types/fairs-festivals/page/2/';

    console.log(`üìÑ Fetching: ${url}\n`);

    try {
      await page.goto(url, {
        waitUntil: 'domcontentloaded',
        timeout: 15000
      });
    } catch (e) {
      console.log('Navigation warning (continuing):', e.message);
    }

    await new Promise(resolve => setTimeout(resolve, 1000));
    const html = await page.content();

    const $ = cheerio.load(html);

    // ÊâæÂà∞Á¨¨‰∏Ä‰∏™‰∫ã‰ª∂ÂÖÉÁ¥†
    const firstEvent = $('div.tanbox[id^="post-"]').first();

    if (firstEvent.length === 0) {
      console.log('‚ùå No div.tanbox[id^="post-"] found');
      console.log('\nÂèØËÉΩÁöÑÂ§áÈÄâÈÄâÊã©Âô®Ôºö');
      console.log('- article elements:', $('article').length);
      console.log('- div.tanbox:', $('div.tanbox').length);
      console.log('- div.post:', $('div.post').length);

      // ÊòæÁ§∫Á¨¨‰∏Ä‰∏™ article ÁöÑÁªìÊûÑ
      const firstArticle = $('article').first();
      if (firstArticle.length > 0) {
        console.log('\nüìù First article HTML (first 800 chars):');
        console.log(firstArticle.html()?.substring(0, 800));
      }
    } else {
      console.log('‚úÖ Found event div.tanbox\n');
      console.log('='.repeat(80));

      // ÊòæÁ§∫ÂÆåÊï¥ÁöÑ‰∫ã‰ª∂ HTML
      const eventHtml = firstEvent.html();
      console.log('\nüìù Complete Event HTML:\n');
      console.log(eventHtml);

      console.log('\n' + '='.repeat(80));
      console.log('\nüîé Field Extraction Test:\n');

      // ÊµãËØïÂêÑ‰∏™Â≠óÊÆµÁöÑÊèêÂèñ
      const titleLink = firstEvent.find('span.title.entry-title a');
      console.log(`‚úì Title selector (span.title.entry-title a): "${titleLink.text().trim()}"`);
      console.log(`  Found: ${titleLink.length > 0 ? 'YES' : 'NO'}`);

      const meta = firstEvent.find('div.meta.archive-meta.date-time');
      console.log(`\n‚úì Meta selector (div.meta.archive-meta.date-time): Found ${meta.length > 0 ? 'YES' : 'NO'}`);
      if (meta.length > 0) {
        console.log(`  data-event-date: "${meta.attr('data-event-date')}"`);
        console.log(`  data-event-date-end: "${meta.attr('data-event-date-end')}"`);
      }

      const costSpan = firstEvent.find('span.cost');
      console.log(`\n‚úì Cost selector (span.cost): Found ${costSpan.length > 0 ? 'YES' : 'NO'}`);
      if (costSpan.length > 0) {
        console.log(`  Text: "${costSpan.text().trim()}"`);
      }

      const metaSpans = firstEvent.find('div.meta.archive-meta span');
      console.log(`\n‚úì Meta spans: Found ${metaSpans.length}`);
      metaSpans.each((i, el) => {
        const $span = $(el);
        console.log(`  [${i}] class="${$span.attr('class')}" text="${$span.text().trim()}"`);
      });

      const thumbnail = firstEvent.find('div.thumbnail-wrapper');
      console.log(`\n‚úì Thumbnail: Found ${thumbnail.length > 0 ? 'YES' : 'NO'}`);

      // Ê£ÄÊü•ÊèèËø∞ÊñáÊú¨
      const textAfterThumbnail = thumbnail.length > 0 ? thumbnail[0].nextSibling : null;
      console.log(`\n‚úì Text after thumbnail: ${textAfterThumbnail ? 'YES (' + textAfterThumbnail.nodeType + ')' : 'NO'}`);

      // Â∞ùËØïÂÖ∂‰ªñÂèØËÉΩÁöÑÊèèËø∞‰ΩçÁΩÆ
      const entry = firstEvent.find('.entry');
      console.log(`\n‚úì .entry selector: Found ${entry.length > 0 ? 'YES' : 'NO'}`);
      if (entry.length > 0) {
        console.log(`  Text (first 100 chars): "${entry.text().trim().substring(0, 100)}"`);
      }

      const description = firstEvent.find('.post-content, .description, p');
      console.log(`\n‚úì Description alternatives:`);
      console.log(`  .post-content: ${firstEvent.find('.post-content').length > 0 ? 'YES' : 'NO'}`);
      console.log(`  .description: ${firstEvent.find('.description').length > 0 ? 'YES' : 'NO'}`);
      console.log(`  p tag: ${firstEvent.find('p').length > 0 ? 'YES' : 'NO'}`);
    }

    await page.close();
    await browser.close();

  } catch (error) {
    console.error('‚ùå Error:', error.message);
    if (browser) await browser.close();
    process.exit(1);
  }
}

main();
